name: tools

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BASE_IMAGE: openpilot-base
  DOCKER_LOGIN: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

  BUILD: selfdrive/test/docker_build.sh base

  RUN: docker run --shm-size 1G -v $GITHUB_WORKSPACE:/tmp/openpilot -w /tmp/openpilot -e FILEREADER_CACHE=1 -e PYTHONPATH=/tmp/openpilot -e NUM_JOBS -e JOB_ID -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID -v $GITHUB_WORKSPACE/.ci_cache/scons_cache:/tmp/scons_cache -v $GITHUB_WORKSPACE/.ci_cache/comma_download_cache:/tmp/comma_download_cache -v $GITHUB_WORKSPACE/.ci_cache/openpilot_cache:/tmp/openpilot_cache $BASE_IMAGE /bin/bash -c


jobs:
  plotjuggler:
    name: plotjuggler
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Build openpilot
      timeout-minutes: 5
      run: ${{ env.RUN }} "scons -j$(nproc) cereal/ common/ --minimal"
    - name: Test PlotJuggler
      timeout-minutes: 2
      run: |
        ${{ env.RUN }} "pytest tools/plotjuggler/"

  simulator:
    name: simulator
    runs-on: ubuntu-20.04
    if: github.repository == 'commaai/openpilot'
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Setup to push to repo
      if: github.ref == 'refs/heads/master' && github.repository == 'commaai/openpilot'
      run: |
        echo "PUSH_IMAGE=true" >> "$GITHUB_ENV"
        $DOCKER_LOGIN
    - name: Build and push sim image
      run: |
        selfdrive/test/docker_build.sh sim

  devcontainer:
    name: devcontainer
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Use local image for testing devcontainer with latest base image
      run: |
        echo "USE_LOCAL_IMAGE=true" >> "$GITHUB_ENV"
    - name: Setup Dev Container CLI
      run: npm install -g @devcontainers/cli
    - name: Build dev container image
      run: devcontainer build --workspace-folder .
    - name: Run dev container
      run: |
        mkdir -p /tmp/devcontainer_scons_cache/
        cp -r $GITHUB_WORKSPACE/.ci_cache/scons_cache/. /tmp/devcontainer_scons_cache/
        devcontainer up --workspace-folder .
    - name: Test environment
      run: |
        devcontainer exec --workspace-folder . scons -j$(nproc) cereal/ common/
        devcontainer exec --workspace-folder . pip install pip-install-test
        devcontainer exec --workspace-folder . touch /home/batman/.comma/auth.json
        devcontainer exec --workspace-folder . sudo touch /root/test.txt

  notebooks:
    name: notebooks
    runs-on: ubuntu-20.04
    if: false && github.repository == 'commaai/openpilot'
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Build openpilot
      timeout-minutes: ${{ ((steps.restore-scons-cache.outputs.cache-hit == 'true') && 10 || 30) }} # allow more time when we missed the scons cache
      run: ${{ env.RUN }} "scons -j$(nproc)"
    - name: Test notebooks
      timeout-minutes: 3
      run: |
        ${{ env.RUN }} "pip install nbmake && pytest --nbmake tools/car_porting/examples/"